/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import sql.CUSTOMER;

import sql.SYS_USER;
import Process.DANGKYKHACHHANG;
import ConnectDB.ConnectionOracle;

import java.sql.SQLException;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.Date;
import java.text.ParseException;
import javax.swing.JOptionPane;

import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;


/**
 *
 * @author pem41
 */
public class DANGKY extends javax.swing.JFrame {

    /**
     * Creates new form DANGKY
     */
    public DANGKY() {
        initComponents();
        this.setLocationRelativeTo(null);
        //JOptionPane.showMessageDialog(rootPane, "Đầu tiên, hãy nhập Ngày sinh");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        CusName = new javax.swing.JTextField();
        CusPhone = new javax.swing.JTextField();
        CusEmail = new javax.swing.JTextField();
        Gender = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        CusAdd = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Register = new javax.swing.JButton();
        DateOfBirth = new com.toedter.calendar.JDateChooser();
        UserName = new javax.swing.JTextField();
        UserPassword = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        UserPassword1 = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabelMin = new javax.swing.JLabel();
        jLabelClose = new javax.swing.JLabel();
        BacktoLogin = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(0, 179, 179));

        CusName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CusName.setForeground(new java.awt.Color(51, 51, 51));
        CusName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CusNameActionPerformed(evt);
            }
        });
        CusName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CusNameKeyTyped(evt);
            }
        });

        CusPhone.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CusPhone.setForeground(new java.awt.Color(51, 51, 51));
        CusPhone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CusPhoneFocusLost(evt);
            }
        });
        CusPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CusPhoneActionPerformed(evt);
            }
        });
        CusPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CusPhoneKeyTyped(evt);
            }
        });

        CusEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CusEmail.setForeground(new java.awt.Color(51, 51, 51));
        CusEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CusEmailFocusLost(evt);
            }
        });
        CusEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CusEmailActionPerformed(evt);
            }
        });

        Gender.setEditable(true);
        Gender.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nu" }));
        Gender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenderActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Giới tính ");

        CusAdd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CusAdd.setForeground(new java.awt.Color(51, 51, 51));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Ngày sinh ");

        Register.setBackground(new java.awt.Color(238, 150, 75));
        Register.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        Register.setForeground(new java.awt.Color(255, 255, 255));
        Register.setText("ĐĂNG KÝ");
        Register.setActionCommand("NEXT >");
        Register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterActionPerformed(evt);
            }
        });

        DateOfBirth.setBackground(new java.awt.Color(255, 255, 255));
        DateOfBirth.setForeground(new java.awt.Color(51, 51, 51));
        DateOfBirth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                DateOfBirthFocusLost(evt);
            }
        });

        UserName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        UserName.setForeground(new java.awt.Color(51, 51, 51));
        UserName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                UserNameFocusLost(evt);
            }
        });
        UserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserNameActionPerformed(evt);
            }
        });

        UserPassword.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        UserPassword.setForeground(new java.awt.Color(51, 51, 51));
        UserPassword.setToolTipText("");
        UserPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                UserPasswordFocusLost(evt);
            }
        });
        UserPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserPasswordActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Mật khẩu");

        UserPassword1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        UserPassword1.setForeground(new java.awt.Color(51, 51, 51));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Nhập lại mật khẩu");

        jPanel2.setBackground(new java.awt.Color(244, 211, 85));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ĐĂNG KÝ TÀI KHOẢN");

        jLabelMin.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelMin.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMin.setText("_");
        jLabelMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelMinMouseClicked(evt);
            }
        });

        jLabelClose.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabelClose.setForeground(new java.awt.Color(255, 255, 255));
        jLabelClose.setText("x");
        jLabelClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCloseMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelMin, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelClose)
                .addGap(19, 19, 19))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelClose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabelMin)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        BacktoLogin.setBackground(new java.awt.Color(40, 175, 176));
        BacktoLogin.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        BacktoLogin.setForeground(new java.awt.Color(255, 255, 255));
        BacktoLogin.setText("   Đăng nhập");
        BacktoLogin.setToolTipText("");
        BacktoLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BacktoLoginMouseClicked(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(40, 175, 176));
        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Họ tên ");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Số điện thoại");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Email");

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Địa chỉ");

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Tên đăng nhập");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Register, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(UserPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(UserName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(CusName, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(CusPhone, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(CusAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CusEmail, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Gender, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(UserPassword1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addComponent(BacktoLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CusName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CusPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CusEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DateOfBirth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Gender))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(CusAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserPassword1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(14, 14, 14)
                .addComponent(Register, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BacktoLogin)
                .addGap(11, 11, 11))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CusPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CusPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CusPhoneActionPerformed

    private void RegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterActionPerformed
        // TODO add your handling code here:
        boolean check1 = false;
        boolean check2 = false;
        
        
        
        String userName = UserName.getText();
        String pass1 = String.valueOf(UserPassword.getPassword());
        String pass2 = String.valueOf(UserPassword1.getPassword());

        DateTimeFormatter dtf =  DateTimeFormatter.ofPattern("dd-MMM-yy");
        String ngaytao = LocalDate.now().format(dtf);
        LocalDate ld = LocalDate.parse(ngaytao, dtf);
        Date createdDate = Date.valueOf(ld);
       
        
        String role = "UR3";

//        String makh = "";
        String fname = CusName.getText();
        String phone = CusPhone.getText();
        String email = CusEmail.getText();
        String gioitinh = (String) Gender.getSelectedItem();
        
  
        
         SimpleDateFormat dateformat = new SimpleDateFormat("dd-MMM-yy");
         String bdate =  dateformat.format(DateOfBirth.getDate());
        
        
        ld = LocalDate.parse(bdate, dtf);
        Date dob = Date.valueOf(ld);
        String add = CusAdd.getText();
        String type = null;
        double accruedMoney = 0;
        String userid = DANGKYKHACHHANG.themTK();

        if (dob == null) 
        {
            JOptionPane.showMessageDialog(null, "Choose Date from Right Box.", "Error", JOptionPane.ERROR_MESSAGE);
            DateOfBirth.grabFocus();
           
        }

        else if (verifyFields()) {
            try {
                if (!checkUsername(userName))
                    
                    try {
                        SYS_USER tk = new SYS_USER(userid, userName, pass1, createdDate, role);
                        check1 = DANGKYKHACHHANG.addUser(tk);
                        if (check1 != true) {
                            JOptionPane.showMessageDialog(this, "Đăng ký thất bại, vui lòng kiểm tra lại!",
                                    "Lỗi đăng ký", JOptionPane.ERROR_MESSAGE);
                        } 
                        else {
                            String makh = DANGKYKHACHHANG.themKH();
                            CUSTOMER kh = new CUSTOMER(makh, fname, gioitinh, dob, add, phone, email, type, accruedMoney , userid);
                            check2 = DANGKYKHACHHANG.addCus(kh);
                            if (check2 == true) {
                               
                                JOptionPane.showMessageDialog(this, "Đăng ký thành công. Hãy nhấn OK để đăng nhập");
                                java.awt.EventQueue.invokeLater(() -> {
                                    new LoginPage().setVisible(true);
                                    this.setLocationRelativeTo(null);
                                });
                                setVisible(false);
                                dispose();
                            } else {
                                JOptionPane.showMessageDialog(this, "không thành công",
                                        "Lỗi đăng ký", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                    } catch (SQLException ex) {
                        int code = ex.getErrorCode();
                        String msg = ex.getMessage();
                        JOptionPane.showMessageDialog(this, msg, String.valueOf(code), JOptionPane.ERROR_MESSAGE);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(DANGKY.class.getName()).log(Level.SEVERE, null, ex);
                    }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(DANGKY.class.getName()).log(Level.SEVERE, null, ex);
            }

            
        }


    }//GEN-LAST:event_RegisterActionPerformed

    private void GenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GenderActionPerformed

    private void UserPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UserPasswordActionPerformed

    private void jLabelCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCloseMouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabelCloseMouseClicked

    private void jLabelMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelMinMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabelMinMouseClicked

    private void BacktoLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BacktoLoginMouseClicked
        LoginPage lgp = new LoginPage();
        lgp.setVisible(true);
        lgp.pack();
        lgp.setLocationRelativeTo(null);
        lgp.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_BacktoLoginMouseClicked

    private void UserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UserNameActionPerformed

    private void CusEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CusEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CusEmailActionPerformed

    private void CusPhoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CusPhoneKeyTyped
       if(!Character.isDigit(evt.getKeyChar())){
           evt.consume();
           
       }
    }//GEN-LAST:event_CusPhoneKeyTyped

    private void CusPhoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CusPhoneFocusLost
        if (this.isVisible()) {
            String phone = CusPhone.getText();
            if (phone.length() < 10 || phone.length() > 11) {
                JOptionPane.showMessageDialog(rootPane, "Số điện thoại phải chứa 10 hoặc 11 chữ số");
                //CusPhone.requestFocus();
            } else try {
                if (checkPhone(phone)) {
                    JOptionPane.showMessageDialog(rootPane, "Số điện thoại đã được đăng ký. Vui lòng nhập email mới");
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(DANGKY.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_CusPhoneFocusLost

    private void CusEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CusEmailFocusLost
      if(this.isVisible()){
          String email = CusEmail.getText();
          String reg= "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
        + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";

          if(email.length() >0){
              if(!email.matches(reg)){  // email sai dinh dang
                  JOptionPane.showMessageDialog(rootPane, "Email sai định dạng, nhập lại email, ví dụ: abc@gmail.com");
             // CusEmail.requestFocus();
              }
              else try {
                  if (checkEmail(email)){
                      JOptionPane.showMessageDialog(rootPane, "Email đã được đăng ký. Vui lòng nhập email mới");
                  }
              } catch (ClassNotFoundException ex) {
                  Logger.getLogger(DANGKY.class.getName()).log(Level.SEVERE, null, ex);
              }
          }
              
          
      }
    }//GEN-LAST:event_CusEmailFocusLost

    private void UserPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_UserPasswordFocusLost
        if(this.isVisible()){
             String pass1 = String.valueOf(UserPassword.getPassword());
             if(pass1.length() <8  || pass1.length()>16){
                  JOptionPane.showMessageDialog(rootPane,"Mật khẩu phải từ 8 đến 16 ký tự");
                 // UserPassword.requestFocus();
             }
             
             
        }
    }//GEN-LAST:event_UserPasswordFocusLost

    private void CusNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CusNameKeyTyped
       if(Character.isDigit(evt.getKeyChar())){
           evt.consume();
           
       }
    }//GEN-LAST:event_CusNameKeyTyped

    private void UserNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_UserNameFocusLost
        if (this.isVisible()) {
            String userName = UserName.getText();
            String reg = "^[a-zA-Z][a-zA-Z0-9_]{6,19}$";

            if (userName.length() < 8 || userName.length() > 30) {
                JOptionPane.showMessageDialog(rootPane, "Tên đăng nhập phải từ 8 đến 30 ký tự");
                //UserName.requestFocus();
            } else if (!userName.matches(reg)) {  // Tên đăng nhập sai dinh dang
                JOptionPane.showMessageDialog(rootPane, "Tên đăng nhập sai định dạng, nhập lại username, ví dụ:  Alexa_7878");

            }
        }
    
    }//GEN-LAST:event_UserNameFocusLost

    private void CusNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CusNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CusNameActionPerformed

    private void DateOfBirthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DateOfBirthFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_DateOfBirthFocusLost
    public boolean verifyFields() {
        String fname = CusName.getText();
        String phone = CusPhone.getText();
        String email = CusEmail.getText();
        
        SimpleDateFormat dateformat = new SimpleDateFormat("dd-MMM-yy");
        String bdate =  dateformat.format(DateOfBirth.getDate());
        
        //SimpleDateFormat dateformat = new SimpleDateFormat("dd-MMM-yy");
       // String bdate = dateformat.format(DateOfBirth.getDate());
        String add = CusAdd.getText();
        String userName = UserName.getText();
        String pass1 = String.valueOf(UserPassword.getPassword());
        String pass2 = String.valueOf(UserPassword1.getPassword());

        //check the empty fields
        if (fname.trim().equals("") || phone.trim().equals("") || email.trim().equals("")
                || add.trim().equals("") || userName.trim().equals("")
                || pass1.trim().equals("") || pass2.trim().equals("")|| DateOfBirth.getDate()==null ) {
            JOptionPane.showMessageDialog(null, "Thông tin không được để trống ");
            return false;

        } // check if the two pass are equals
        else if (!pass1.equals(pass2)) {
            JOptionPane.showMessageDialog(null, "Mật khẩu xác nhận không đúng");
            return false;
        } // if everything is OK
        else {
            return true;
        }


    }

    //check if username already exits in database
    public boolean checkUsername(String userName) throws ClassNotFoundException {
        PreparedStatement st;
        ResultSet rs;
        boolean userName_exist = false;

        String query = "SELECT * FROM SYS_USER WHERE userName = ?";
        try {
            st = ConnectionOracle.getOracleConnection().prepareStatement(query);
            st.setString(1, userName);
            rs = st.executeQuery();
            if (rs.next()) {
                userName_exist = true;
                JOptionPane.showMessageDialog(null, " Tên đăng nhập đã tồn tại. Hãy chọn tên khác");

            }
        } catch (SQLException ex) {
            Logger.getLogger(DANGKY.class.getName()).log(Level.SEVERE, null, ex);

        }
        return userName_exist;

    }
    public boolean checkEmail(String email) throws ClassNotFoundException {
        PreparedStatement st;
        ResultSet rs;
        boolean email_exist = false;

        String query = "SELECT * FROM CUSTOMER WHERE cusEmail = ?";
        try {
            st = ConnectionOracle.getOracleConnection().prepareStatement(query);
            st.setString(1, email);
            rs = st.executeQuery();
            if (rs.next()) {
                email_exist = true;
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(DANGKY.class.getName()).log(Level.SEVERE, null, ex);

        }
        return email_exist;

    }
    public boolean checkPhone(String phone) throws ClassNotFoundException {
        PreparedStatement st;
        ResultSet rs;
        boolean phone_exist = false;

        String query = "SELECT * FROM CUSTOMER WHERE cusPhone = ?";
        try {
            st = ConnectionOracle.getOracleConnection().prepareStatement(query);
            st.setString(1, phone);
            rs = st.executeQuery();
            if (rs.next()) {
                phone_exist = true;
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(DANGKY.class.getName()).log(Level.SEVERE, null, ex);

        }
        return phone_exist;

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DANGKY.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new DANGKY().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BacktoLogin;
    private javax.swing.JTextField CusAdd;
    private javax.swing.JTextField CusEmail;
    private javax.swing.JTextField CusName;
    private javax.swing.JTextField CusPhone;
    private com.toedter.calendar.JDateChooser DateOfBirth;
    private javax.swing.JComboBox<String> Gender;
    private javax.swing.JButton Register;
    private javax.swing.JTextField UserName;
    private javax.swing.JPasswordField UserPassword;
    private javax.swing.JPasswordField UserPassword1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelClose;
    private javax.swing.JLabel jLabelMin;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
